import { Telegraf, Markup } from 'telegraf';
import dotenv from 'dotenv';
import db from './db.js';

dotenv.config();

const bot = new Telegraf(process.env.BOT_TOKEN);

const FARM_COOLDOWN = 60;      // —Å–µ–∫—É–Ω–¥
const BONUS_COOLDOWN = 3600;   // 1 —á–∞—Å
const REFERRAL_BONUS = 10;     // –ë–æ–Ω—É—Å –∑–∞ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ

// –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã
const ADMINS = new Set(); // –•—Ä–∞–Ω–µ–Ω–∏–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–µ–π –∫–æ–ª–æ–Ω–∫–∏ referrer_id
try {
  db.prepare("ALTER TABLE users ADD COLUMN referrer_id INTEGER").run();
  console.log("–ö–æ–ª–æ–Ω–∫–∞ referrer_id —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É users.");
} catch (error) {
  if (error.message.includes("duplicate column name")) {
    console.log("–ö–æ–ª–æ–Ω–∫–∞ referrer_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ users.");
  } else {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–ª–æ–Ω–∫–∏ referrer_id:", error.message);
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getUser(id, username) {
  let user = db.prepare('SELECT * FROM users WHERE id = ?').get(id);
  if (!user) {
    db.prepare('INSERT INTO users (id, username, stars, last_farm, last_bonus, referrer_id) VALUES (?, ?, 0, 0, 0, NULL)').run(id, username || '');
    user = db.prepare('SELECT * FROM users WHERE id = ?').get(id);
  }
  return user;
}

function mainMenu() {
  return Markup.keyboard([
    ['‚≠ê –§–∞—Ä–º –∑–≤—ë–∑–¥', 'üéÅ –ë–æ–Ω—É—Å'],
    ['üë§ –ü—Ä–æ—Ñ–∏–ª—å', 'üèÜ –õ–∏–¥–µ—Ä—ã'],
    ['üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞']
  ]).resize();
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
function isAdmin(userId) {
  return ADMINS.has(userId);
}

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
bot.command('add_admin', (ctx) => {
  if (!isAdmin(ctx.from.id)) {
    return ctx.reply('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
  }

  const args = ctx.message.text.split(' ');
  if (args.length < 2) {
    return ctx.reply('‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.');
  }

  const newAdminId = parseInt(args[1]);
  ADMINS.add(newAdminId);
  ctx.reply(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${newAdminId} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã.`);
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ –∑–≤—ë–∑–¥
bot.command('give_stars', (ctx) => {
  if (!isAdmin(ctx.from.id)) {
    return ctx.reply('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
  }

  const args = ctx.message.text.split(' ');
  if (args.length < 3) {
    return ctx.reply('‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥.');
  }

  const userId = parseInt(args[1]);
  const stars = parseInt(args[2]);

  db.prepare('UPDATE users SET stars = stars + ? WHERE id = ?').run(stars, userId);
  ctx.reply(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID ${userId} –≤—ã–¥–∞–Ω–æ ${stars} –∑–≤—ë–∑–¥.`);
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.command('block_user', (ctx) => {
  if (!isAdmin(ctx.from.id)) {
    return ctx.reply('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
  }

  const args = ctx.message.text.split(' ');
  if (args.length < 2) {
    return ctx.reply('‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏.');
  }

  const userId = parseInt(args[1]);
  db.prepare('UPDATE users SET blocked = 1 WHERE id = ?').run(userId);
  ctx.reply(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${userId} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.`);
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
bot.command('list_users', (ctx) => {
  if (!isAdmin(ctx.from.id)) {
    return ctx.reply('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
  }

  const users = db.prepare('SELECT id, username, stars FROM users').all();
  const userList = users
    .map(user => `ID: ${user.id}, –ò–º—è: ${user.username || '–ê–Ω–æ–Ω–∏–º'}, –ó–≤—ë–∑–¥: ${user.stars}`)
    .join('\n');

  ctx.reply(`üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n${userList}`);
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot.start((ctx) => {
  const args = ctx.message.text.split(' ');
  const referrerId = args.length > 1 && args[1].startsWith('referral_') 
    ? parseInt(args[1].split('_')[1]) 
    : null;

  let user = db.prepare('SELECT * FROM users WHERE id = ?').get(ctx.from.id);
  if (!user) {
    db.prepare('INSERT INTO users (id, username, stars, last_farm, last_bonus, referrer_id) VALUES (?, ?, 0, 0, 0, ?)').run(
      ctx.from.id,
      ctx.from.username || '',
      referrerId
    );

    // –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
    if (referrerId) {
      db.prepare('UPDATE users SET stars = stars + ? WHERE id = ?').run(REFERRAL_BONUS, referrerId);
      ctx.telegram.sendMessage(referrerId, `üéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏ ${REFERRAL_BONUS} –∑–≤—ë–∑–¥ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!`);
    }
  }

  ctx.reply(`üëã –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç üåü`, mainMenu());
});

bot.launch();
console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω');
